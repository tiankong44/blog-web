{"version":3,"sources":["webpack:///./src/common/utils/tools.js"],"names":["__webpack_exports__","param","url","postParam","body","opInfo","ip","op_time","loader","LOAD","axios","post","emulateJSON","responseType","then","res","close","blob","data","reader","FileReader","readAsDataURL","onload","e","a","document","createElement","fileName","headers","split","download","decodeURI","href","target","result","appendChild","click","removeChild","MSG","console","log","status","__WEBPACK_IMPORTED_MODULE_0_axios__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_axios___default","n","__WEBPACK_IMPORTED_MODULE_1__common_utils_ui__"],"mappings":"sDAAAA,EAAA,EAwGO,SAAuBC,EAAOC,GACnC,IAIIC,GAAcC,KAAMH,EAAOI,QAH7BC,GAAI,YACJC,QAAS,wBAGPC,EAASC,cACbC,IACGC,KAAKT,EAAKC,GACTS,aAAa,EACbC,aAAc,SAEfC,KACC,SAAUC,GACRP,EAAOQ,QACP,IAAIC,EAAOF,EAAIG,KACXC,EAAS,IAAIC,WACjBD,EAAOE,cAAcJ,GACrBE,EAAOG,OAAS,SAACC,GACf,IAAIC,EAAIC,SAASC,cAAc,KAC3BC,EAAWZ,EAAIa,QAAQ,uBAAuBC,MAAM,wBAAwB,GAChFL,EAAEM,SAAWC,UAAUJ,GACvBH,EAAEQ,KAAOT,EAAEU,OAAOC,OAClBT,SAASrB,KAAK+B,YAAYX,GAC1BA,EAAEY,QACFX,SAASrB,KAAKiC,YAAYb,KAG9B,SAAUT,GACRP,EAAOQ,QACPsB,YAAI,OAAQ,SACZC,QAAQC,IAAIzB,EAAI0B,WAvIxB,IAAAC,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA","file":"static/js/0.0a2fa7d3bf2fce839835.js","sourcesContent":["import axios from \"axios\";\r\nimport { MSG, LOAD } from \"@/common/utils/ui\";\r\n/**\r\n * js获取url参数值\r\n * @param {String} name 关键词\r\n */\r\nexport function getUrlParams(name) {\r\n  // 不传name返回所有值，否则返回对应值\r\n  var url = window.location.href;\r\n  if (url.indexOf(\"?\") == 1) {\r\n    return false;\r\n  }\r\n  url = url.split(\"?\")[1];\r\n  url = url.split(\"&\");\r\n  var name = name || \"\";\r\n  var nameres;\r\n  var tempobj = {};\r\n  // 获取全部参数及其值\r\n  for (var i = 0; i < url.length; i++) {\r\n    var info = url[i].split(\"=\");\r\n    tempobj[info[0]] = decodeURI(info[1]);\r\n  }\r\n  // 如果传入一个参数名称，就匹配其值\r\n  if (name) {\r\n    for (var i = 0; i < url.length; i++) {\r\n      for (const key in url[i]) {\r\n        if (key == name) {\r\n          nameres = url[i][key];\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    nameres = tempobj;\r\n  }\r\n  // 返回结果\r\n  return nameres;\r\n}\r\n/**\r\n * 判断客户端环境\r\n */\r\nexport function clientCheck() {\r\n  let inBrowser = typeof window !== \"undefined\";\r\n  let UA = inBrowser && window.navigator.userAgent.toLowerCase();\r\n  let CLIENT_VAR = new Object({\r\n    inBrowser: typeof window !== \"undefined\",\r\n    UA: inBrowser && window.navigator.userAgent.toLowerCase(),\r\n    isIE: UA && /msie|trident/.test(UA),\r\n    isIE9: UA && UA.indexOf(\"msie 9.0\") > 0,\r\n    isEdge: UA && UA.indexOf(\"edge/\") > 0,\r\n    isAndroid: UA && UA.indexOf(\"android\") > 0,\r\n    isIOS: UA && /iphone|ipad|ipod|ios/.test(UA),\r\n    isChrome: UA && UA.indexOf(\"chrome\") > 0,\r\n  });\r\n  return CLIENT_VAR;\r\n}\r\n/**\r\n * 四舍五入保留num位小数\r\n * @param v\r\n * @param num 保留位数\r\n * @param isZeroFill 默认补0；false-不补\r\n * @returns {*}\r\n */\r\nexport function toDecimal(v, num, isZeroFill) {\r\n  var f = parseFloat(v);\r\n  if (isNaN(f)) {\r\n    return false;\r\n  }\r\n  f = Math.round(v * Math.pow(10, num)) / Math.pow(10, num);\r\n  var s = f.toString();\r\n  if (isZeroFill !== false) {\r\n    var rs = s.indexOf(\".\");\r\n    if (num > 0 && rs < 0) {\r\n      rs = s.length;\r\n      s += \".\";\r\n    }\r\n    while (s.length <= rs + num) {\r\n      s += \"0\";\r\n    }\r\n  }\r\n  return s;\r\n}\r\n//日期类工具-字符串到日期\r\nexport function string2Date(str, format) {\r\n  var date = new Date();\r\n  if (format == \"yyyyMM\") {\r\n    date = new Date(str.substring(0, 4), parseInt(str.substring(4, 6), 10) - 1);\r\n  }\r\n  if (format == \"yyyy-MM\") {\r\n    date = new Date(str.substring(0, 4), parseInt(str.substring(5, 7), 10) - 1);\r\n  }\r\n  if (format == \"yyyyMMdd\") {\r\n    date = new Date(\r\n      str.substring(0, 4),\r\n      parseInt(str.substring(4, 6), 10) - 1,\r\n      parseInt(str.substring(6, 8), 10)\r\n    );\r\n  }\r\n  return date;\r\n}\r\n/**\r\n * axios post 下载附件\r\n * @param {Object} param [请求参数]\r\n * @param {String} url [下载链接]\r\n */\r\nexport function postDownload (param, url) {\r\n  let opInfo = {\r\n    ip: \"127.0.0.1\",\r\n    op_time: \"2020-07-08 14:49:39\",\r\n  };\r\n  let postParam = { body: param, opInfo: opInfo };\r\n  let loader = LOAD();\r\n  axios\r\n    .post(url, postParam, {\r\n      emulateJSON: false,\r\n      responseType: \"blob\", // 响应数据格式blob\r\n    })\r\n    .then(\r\n      function (res) {\r\n        loader.close();\r\n        let blob = res.data;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(blob);\r\n        reader.onload = (e) => {\r\n          let a = document.createElement(\"a\");\r\n          let fileName = res.headers[\"content-disposition\"].split(\"attachment;filename=\")[1];\r\n          a.download = decodeURI(fileName); \r\n          a.href = e.target.result;\r\n          document.body.appendChild(a);\r\n          a.click();\r\n          document.body.removeChild(a);\r\n        };\r\n      },\r\n      function (res) {\r\n        loader.close();\r\n        MSG(\"下载失败\", \"error\");\r\n        console.log(res.status);\r\n      }\r\n    );\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/utils/tools.js"],"sourceRoot":""}